/**
 *
 * maintainer         CoreMedia
 * maintainer_email   bodo.schulz@coremedia.com
 * license            Copyright (C) 2016-2018, CoreMedia AG proprietary License, all rights reserved.
 * description        includes icinga2 Checks for CoreMedia specific checks
 * version            1.2.0
 *
 */

/**
  *
 */
object CheckCommand "coremedia_feeder" {

  import "plugin-check-command"

  command = [ "/usr/lib/monitoring-plugins/check_feeder_status" ]

  arguments = {
    "--hostname" = "$host$",
    "--feeder" = "$feeder$"
  }
}

/**
  *
 */
object CheckCommand "coremedia_cache" {

  import "plugin-check-command"

  command = [ "/usr/lib/monitoring-plugins/check_app_cache" ]

  arguments = {
    "--hostname"    = "$host$"
    "--application" = "$application$"
    "--cache"       = "$cache$"
    "--warning"     = {
      value  = "$warning$"
      set_if = bool("$warning$")
    }
    "--critical"    = {
      value  = "$critical$"
      set_if = bool("$critical$")
    }
  }
}

/**
  *
 */
object CheckCommand "coremedia_memory" {

  import "plugin-check-command"

  command = [ "/usr/lib/monitoring-plugins/check_tomcat_memory" ]

  arguments = {
    "--hostname"    = "$host$"
    "--application" = "$application$"
    "--memory"      = "$memory$"
    "--warning"     = {
      value  = "$warning$"
      set_if = bool("$warning$")
    }
    "--critical"    = {
      value  = "$critical$"
      set_if = bool("$critical$")
    }
  }
}

/**
  *
 */
object CheckCommand "coremedia_license" {

  import "plugin-check-command"

  command = [ "/usr/lib/monitoring-plugins/check_license" ]

  arguments = {
    "--hostname"    = "$host$"
    "--contentserver" = "$application$"
    "--soft" = {
      set_if = true
    }
    "--hard" = {
      set_if = true
    }
  }
}

/**
  *
 */
object CheckCommand "coremedia_capconnection" {

  import "plugin-check-command"

  command = [ "/usr/lib/monitoring-plugins/check_capconnection" ]

  arguments = {
    "--hostname"    = "$host$"
    "--application" = "$application$"
  }
}

/**
  *
 */
object CheckCommand "coremedia_runlevel" {

  import "plugin-check-command"

  command = [ "/usr/lib/monitoring-plugins/check_runlevel" ]

  arguments = {
    "--hostname"       = "$host$"
    "--contentserver" = "$application$"
  }
}

/**
  *
 */
object CheckCommand "coremedia_sequencenumbers" {

  import "plugin-check-command"

  command = [ "/usr/lib/monitoring-plugins/check_sequencenumbers" ]

  arguments = {
    "--rls" = "$rls$"
    "--mls" = "$mls$"
  }
}

object CheckCommand "coremedia_ne_disk" {

  import "plugin-check-command"

  command = [ "/usr/lib/monitoring-plugins/check_nodeexporter_disk" ]

  arguments = {
    "--hostname" = "$host$"
    "--partition" = "$partition$"
    "--warning" = "90%"
    "--critical" = "93%"
  }
}

object CheckCommand "coremedia_ne_memory" {

  import "plugin-check-command"

  command = [ "/usr/lib/monitoring-plugins/check_nodeexporter_memory" ]

  arguments = {
    "--hostname" = "$host$"
    "--warning" = "$warning$"
    "--critical" = "$critical$"
  }
}

object CheckCommand "coremedia_ne_load" {

  import "plugin-check-command"

  command = [ "/usr/lib/monitoring-plugins/check_nodeexporter_load" ]

  arguments = {
    "--hostname" = "$host$"
    "--warning" = "$warning$"
    "--critical" = "$critical$"
  }
}

object CheckCommand "coremedia_ne_openfiles" {

  import "plugin-check-command"

  command = [ "/usr/lib/monitoring-plugins/check_nodeexporter_openfiles" ]

  arguments = {
    "--hostname" = "$host$"
  }
}

object CheckCommand "coremedia_publisher" {

  import "plugin-check-command"

  command = [ "/usr/lib/monitoring-plugins/check_publisher" ]

  arguments = {
    "--hostname" = "$host$"
  }
}

object CheckCommand "coremedia_application_openfiles" {

  import "plugin-check-command"

  command = [ "/usr/lib/monitoring-plugins/check_tomcat_openfiles" ]

  arguments = {
    "--hostname" = "$host$"
    "--application" = "$application$"
  }
}

/**
  *
 */
/*
object CheckCommand "ssl_cert" {

  import "plugin-check-command"

  command = [ "/usr/lib/monitoring-plugins/check_ssl_cert" ]

  arguments = {
    "--host"     = "$host$"
    "--tls1_2"   = {
      set_if = "$tls1_2$"
    }
  }
}
*/

