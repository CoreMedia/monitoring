
/**
  *   generic SSL Certificate check
  */
apply Service "SSL Certificate" to Host {

  import "generic-service"

  display_name = "SSL Certificate"
  notes        = "check ssl certificate"
  notes_url    = "/doc/operations/http-certificate.html"

  check_command = "http"

  vars = {
    "http_certificate" = "15"
    "http_port" = "443"
    "http_sni" = true
    "http_ssl" = true
  }

  max_check_attempts = 2
  check_interval = 10m
  retry_interval = 2
  enable_notifications = true

  assign where host.vars.https
}


/**
  *  generic SSL Certificate check for all vhosts in vars.https_vhost
  */
apply Service "SSL CERT: " for (https_vhost => config in host.vars.https_vhost) {

  import "generic-service"

  display_name = "SSL Certificate"
  notes        = "check ssl certificate"
  notes_url    = "/doc/operations/http-certificate.html"

  check_command = "http"

  vars = {
    "http_vhost" = https_vhost
    "http_certificate" = "15"
    "http_port" = "443"
    "http_sni" = true
    "http_ssl" = true
  }

  max_check_attempts = 2
  check_interval = 10m
  retry_interval = 2
  enable_notifications = true

  assign where host.vars.https_vhost
}


/**
  *  SSL certifacte check
  */
apply Service "cert-" for ( app => config in host.vars.coremedia ) {

  import "generic-service"

  display_name = "Certificate (HTTPs)"
  notes        = "check ssl certificate"
  notes_url    = "/doc/operations/http-certificate.html"

  check_command = "ssl"

  vars += config
  vars = {
    "ssl_address" = host.address
    "ssl_port" = "443"
    "ssl_cert_valid_days_warn" = "240"
    "ssl_cert_valid_days_critical" = "120"
  }

  max_check_attempts = 3
  check_interval = 45s
  retry_interval = 20s
  enable_notifications = true

  assign where app == "https-proxy"
}


