
worker_processes  1;

error_log  /dev/stdout notice;

daemon     off;
pid        run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  include       mime.types;
  default_type  application/octet-stream;

  log_format main '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';

  map $http_user_agent $ignore_ua {
    default                 1;
    "ELB-HealthChecker/1.0" 0;
    "ELB-HealthChecker/2.0" 0;
  }

  access_log  /dev/stdout  main;

  sendfile        on;

  keepalive_timeout   300;
  send_timeout        600;

  server_tokens off;

  gzip  on;
  gzip_disable "MSIE [1-6]\.(?!.*SV1)";

  # use docker resolver
  resolver 127.0.0.11 valid=5s;

  server {
    listen              *:80 default_server;
    server_name         _;

    log_not_found       off;
    access_log          off;
    error_log           off;

    # we want an permantent redirect to https
    #
#    if ($http_x_forwarded_proto != "https") {
#      rewrite ^(.*)$ https://$host$1 permanent;
#    }

    include conf.d/common.conf;
    include modules.d/00-restrictions.conf;
    include modules.d/00-health_check.conf;
    include sites-enabled/01-data-visulization.conf;
  }

  server {
    listen              *:443 ssl http2;
    server_name         _;

    ssl                 on;
    ssl_certificate     /etc/nginx/secure/localhost/cert.pem;
    ssl_certificate_key /etc/nginx/secure/localhost/key.pem;
    ssl_dhparam         /etc/nginx/secure/localhost/dh.pem;

    # only this domain
    add_header Strict-Transport-Security "max-age=31536000";

    # apply also on subdomains
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    include conf.d/*.conf;
    include modules.d/00-restrictions.conf;
    include modules.d/00-health_check.conf;
    include sites-enabled/01-data-visulization.conf;
  }

}
